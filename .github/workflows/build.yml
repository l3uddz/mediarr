name: build
on:
  push:
    branches:
      - master
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # setup go
      - name: go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
      - run: go version
      - run: go env

      # cache
      - name: cache
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # vendor
      - name: vendor
        run: |
          make vendor

      # git status
      - run: git status

      # build
      - name: build
        if: startsWith(github.ref, 'refs/tags/') == false
        run: |
          make snapshot

      # get tag name
      - name: tag_name
        if: startsWith(github.ref, 'refs/tags/')
        uses: little-core-labs/get-git-tag@v3.0.2
        with:
          tagRegex: "v?(.+)"

      # publish
      - name: publish
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          make publish

      # artifacts
      - name: artifact_linux
        uses: actions/upload-artifact@v2-preview
        with:
          name: build_linux
          path: dist/*linux*

      - name: artifact_darwin
        uses: actions/upload-artifact@v2-preview
        with:
          name: build_darwin
          path: dist/*darwin*

      - name: artifact_windows
        uses: actions/upload-artifact@v2-preview
        with:
          name: build_windows
          path: dist/*windows*

      # docker build
      - name: docker
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: cloudb0x/mediarr
          dockerfile: build/Dockerfile
          tag_with_ref: true
          tag_with_sha: true
          always_pull: true
